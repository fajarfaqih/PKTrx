import com.ihsan.foundation.pobjecthelper as phelper
import sys
import simplejson


def FormSetDataEx(uideflist, params) :
  config = uideflist.config
  helper = phelper.PObjectHelper(config)

  if params.GetDatasetByName('trparam') != None :
    oForm = helper.CreateObject('FormTransaksi')
    oForm.SetDataEx(uideflist,params)

    uipTran = uideflist.uipTransaction.Dataset.GetRecord(0)
    oTran = helper.GetObjectByNames('Transaction',{'TransactionNo' : uipTran.TransactionNo})

    uipTran.ActualDate = oTran.ActualDate
    
    if uipTran.RefCurrencyCode in ['',None]:
      uipTran.RefCurrencyCode = oTran.CurrencyCode
      uipTran.RefRate = 1.0
      uipTran.RefAmountEkuivalen = uipTran.RefRate * uipTran.RefAmount
    # end if
    
    return

  Now = int(config.Now())
  rec = uideflist.uipTransaction.Dataset.AddRecord()
  rec.Inputer = str(config.SecurityContext.UserId)
  rec.PaidTo = rec.Inputer
  rec.BranchCode = str(config.SecurityContext.GetUserInfo()[4])
  rec.TransactionDate = Now
  rec.FloatTransactionDate = Now
  rec.ActualDate = Now
  rec.Amount = 0.0
  
  # Set Transaction Number
  oService = helper.LoadScript('Transaction.TransactionHelper')
  rec.TransactionNo = '<AUTOGENERATED>' #oService.GetTransactionNumber(config,'CA')

  Now = config.Now()
  bulan = int(config.FormatDateTime('m',Now))
  tahun = int(config.FormatDateTime('yyyy',Now))
  rsPeriod = config.CreateSQL(' \
       select a.periodid from budgetperiod a , budgetperiod b \
       where a.parentperiodid=b.periodid \
           and a.periodvalue=%d and b.periodvalue=%d' % (bulan,tahun)).RawResult
  rec.SetFieldByName('PeriodId', rsPeriod.GetFieldValueAt(0) or 0)
  
def GetInfoRefTransaction(config, params, returns):
  status = returns.CreateValues(
    ['Is_Err',0],
    ['Err_Message',''],
    ['Amount',0.0],
    ['TransactionDate',0],
    ['Description',''],
    ['TransactionItemId',0],
    
  )

  rec = params.FirstRecord
  
  try:
    helper = phelper.PObjectHelper(config)
    oTran = helper.GetObjectByNames('CATransactItem',{'LTransaction.TransactionNo':rec.TransactionNo})

    if oTran.isnull :
      raise 'PERINGATAN','Data Transaksi Uang Muka Tidak Ditemukan'
      
    if oTran.LCashAdvanceAccount.EmployeeIdNumber != rec.EmployeeId :
      raise 'PERINGATAN','Data Transaksi Uang Muka Milik Karyawan Lain'

    status.Amount = oTran.Amount
    status.TransactionDate = oTran.LTransaction.GetAsTDateTime('TransactionDate')
    status.Description = oTran.LTransaction.Description
    status.TransactionItemId = oTran.TransactionItemId
    
  except:
    status.Is_Err = 1
    status.Err_Message = str(sys.exc_info()[1])
    
def SimpanData(config, params, returns):
  IsErr = 0
  ErrMessage = ''
  TransactionNo = ''
  StreamName = ''
  
  helper = phelper.PObjectHelper(config)
  try :
    oTransaction = params.uipTransaction.GetRecord(0)

    request = {}
    #request['BatchId'] = oTransaction.GetFieldByName('LBatch.BatchId')
    request['ActualDate'] = oTransaction.ActualDate
    request['EmployeeId'] = oTransaction.EmployeeId #oTransaction.GetFieldByName('LEmployee.Nomor_Karyawan')
    request['EmployeeName'] = oTransaction.EmployeeName
    request['CashAccountNo'] = oTransaction.GetFieldByName('LCashAccount.AccountNo')
    request['Amount'] = oTransaction.Amount
    request['ReferenceNo'] = oTransaction.ReferenceNo
    request['Description'] = oTransaction.Description
    request['Rate'] = 1.0
    request['Inputer'] = config.SecurityContext.InitUser
    request['BranchCode'] = config.SecurityContext.GetUserInfo()[4]
    request['RefAmount'] = oTransaction.RefAmount
    request['RefTransactionItemId'] = oTransaction.RefTransactionItemId
    request['RefAmount'] = oTransaction.RefAmount
    request['TransactionNo'] = oTransaction.TransactionNo
    request['PaidTo'] = oTransaction.PaidTo
    request['RefInvoiceNo'] = oTransaction.RefInvoiceNo
    request['SponsorId'] = oTransaction.RefSponsorId
    request['ProductAccountNo'] = oTransaction.RefProductNo
    request['InvoiceId'] = oTransaction.InvoiceId
    request['CurrencyCode'] = oTransaction.RefCurrencyCode
    request['Rate'] = oTransaction.RefRate
    
    
    sRequest = simplejson.dumps(request)

    oService = helper.LoadScript('Transaction.GeneralTransaction')

    TransactionCode = 'INVP'
    if oTransaction.ShowMode == 1:
      response = oService.CreateTransaction(TransactionCode, config, sRequest, params)
    else:
      response = oService.UpdateTransaction(TransactionCode, config, sRequest, params)
    # end if

    response = simplejson.loads(response)
    TransactionNo = response[u'TransactionNo']

    filename = response[u'FileKwitansi']

    sw = returns.AddStreamWrapper()
    sw.Name = 'Kwitansi'
    sw.LoadFromFile(filename)
    #sw.MIMEType = config.AppObject.GetMIMETypeFromExtension(filename)
    sw.MIMEType = 'application/msword'

    StreamName = sw.Name

    IsErr = response[u'Status']
    ErrMessage = response[u'ErrMessage']

  except :
    IsErr = 1
    ErrMessage = str(sys.exc_info()[1])

  returns.CreateValues(
     ['IsErr', IsErr],
     ['ErrMessage', ErrMessage],
     ['TransactionNo',TransactionNo],
     ['StreamName',StreamName],
     )

