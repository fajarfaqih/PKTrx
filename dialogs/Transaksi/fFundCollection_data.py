import com.ihsan.foundation.pobjecthelper as phelper
import sys
import simplejson


def FormSetDataEx(uideflist, params) :
  config = uideflist.config
  helper = phelper.PObjectHelper(uideflist.config)

  param = params.FirstRecord
  
  if param.Dataset.IsFieldExist('Modus_SetData'):
    oForm = helper.CreateObject('FormTransaksi')
    oForm.SetDataEx(uideflist,params)
    uipTran = uideflist.uipTransaction.Dataset.GetRecord(0)
    uipDonor = uideflist.uipDonor.Dataset.GetRecord(0)

    oTran = helper.GetObjectByNames('Transaction',{'TransactionNo' : uipTran.TransactionNo})
    
    uipTran.ActualDate = oTran.GetAsTDateTime('ActualDate')

    uipDonor.DonorNo = oTran.DonorNo
    uipDonor.DonorName = oTran.DonorName
    uipDonor.BranchId = int(config.SecurityContext.GetUserInfo()[2])
    uipTran.TotalAmount = oTran.Amount
    uipTran.SetFieldByName('LVolunteer.VolunteerId',oTran.VolunteerId)
    if oTran.VolunteerId not in ['',None,0] :
      oVolunteer = helper.GetObject('Volunteer',oTran.VolunteerId)
      uipTran.SetFieldByName('LVolunteer.VolunteerName',oVolunteer.VolunteerName)
    return


#  DonorId = params.FirstRecord.DonorId
  #oDonor = helper.GetObject('Donor', DonorId)

#  oDonor = helper.CreateObject('ExtDonor')

#  if not oDonor.GetData(DonorId): raise 'PERINGATAN','Data Donor tidak ditemukan'
  
  recDonor = uideflist.uipDonor.Dataset.AddRecord()
  recDonor.BranchId = int(config.SecurityContext.GetUserInfo()[2])
#  rec.DonorId = DonorId
  #rec.DonorName = oDonor.DonorName
  #rec.PhoneNumber = oDonor.PhoneNumber
  #rec.Address = oDonor.AddressStreet

#  rec.DonorNo = oDonor.donor_no
#  rec.DonorName = oDonor.full_name
#  rec.PhoneNumber = oDonor.phone_no
#  rec.Address = oDonor.address
#  rec.DonorType = oDonor.donor_type_id
  
  Now = config.Now()
  recT = uideflist.uipTransaction.Dataset.AddRecord()
  recT.Inputer = str(config.SecurityContext.UserId)
  recT.PaidTo = recT.Inputer
  #recT.BranchId = int(config.SecurityContext.GetUserInfo()[2])
  recT.BranchCode = str(config.SecurityContext.GetUserInfo()[4])
  recT.TransactionDate = int(Now)
  recT.ActualDate = recT.TransactionDate
  recT.FloatTransactionDate = int(Now)
  recT.Rate = 1.0
  recT.TotalAmount = 0.0
  recT.CashType = 'C'

  # Set Transaction Number
  recT.TransactionNo = '<AUTOGENERATED>'  #GenerateTransactionNumber(config,helper)

  aUserInfo = config.SecurityContext.GetUserInfo()
  aBranchCode = str(aUserInfo[4])
  aBranchName = str(aUserInfo[5])
  #recT.SetFieldByName('LProductBranch.Kode_Cabang', aBranchCode)
  #recT.SetFieldByName('LProductBranch.Nama_Cabang', aBranchName)

  recT.SetFieldByName('LCurrency.Currency_Code', '000')
  recT.SetFieldByName('LCurrency.Full_Name', 'Indonesia Rupiah')
  recT.SetFieldByName('LCurrency.Kurs_Tengah_BI', 1.0)
  
  recT.SetFieldByName('LValuta.Currency_Code', '000')
  recT.SetFieldByName('LValuta.Full_Name', 'Indonesia Rupiah')
  recT.SetFieldByName('LValuta.Kurs_Tengah_BI', 1.0)
  
  bulan = int(config.FormatDateTime('m',Now))
  tahun = int(config.FormatDateTime('yyyy',Now))
  rsPeriod = config.CreateSQL(' \
       select a.periodid from budgetperiod a , budgetperiod b \
       where a.parentperiodid=b.periodid \
           and a.periodvalue=%d and b.periodvalue=%d' % (bulan,tahun)).RawResult
  recT.PeriodId = (rsPeriod.GetFieldValueAt(0) or 0)

def GenerateTransactionNumber(config,helper):
  oService = helper.LoadScript('Transaction.TransactionHelper')
  return oService.GetTransactionNumber(config,'SD001')

def GetDonorDataByNo(config,params,returns):
  status = returns.CreateValues(
    ['Is_Err',0],
    ['Err_Message',''],
    ['DonorId',0],
    ['DonorName',''],
    ['PhoneNumber',''],
    ['DonorType',0],
    ['Address',''],
    ['MarketerId',0],
    ['MarketerName','']
  )

  helper = phelper.PObjectHelper(config)
  try:
    DonorNo = params.FirstRecord.DonorNo
    
    oDonor = helper.CreateObject('ExtDonor')

    oDonor.GetDataByDonorNo(DonorNo)

    if oDonor.isnull : raise 'PERINGATAN','Data Donor tidak ditemukan'

    status.DonorId = oDonor.id
    status.DonorNo = oDonor.donor_no
    status.DonorName = oDonor.full_name
    status.PhoneNumber = oDonor.phone_no
    status.Address = oDonor.address
    status.DonorType = oDonor.donor_type_id
    status.MarketerId = oDonor.marketer_id
    status.MarketerName = oDonor.GetMarketerName()
    
  except:
    status.Is_Err = 1
    status.Err_Message = str(sys.exc_info()[1])

  rec = params.FirstRecord
  
  
def GetCurrencyRate(config, params, returns):
  app = config.AppObject
  param = params.FirstRecord
  res = app.rexecscript('accounting','appinterface/Currency.GetCurrencyInfo',
        app.CreateValues(['kode_valuta',param.CurrencyCode]))


  rec = res.FirstRecord
  if rec.Is_Error : raise '',rec.Err_Message
  returns.CreateValues(
    ['Full_Name',rec.Full_Name],
    ['Kurs_Tengah_BI',rec.Kurs_Tengah_BI],
  )

def SimpanData(config, params, returns):
  IsErr = 0
  ErrMessage = ''
  StreamName = ''
  TransactionId = 0
  NewTransactionNo = ''
  TransactionNo = ''
  
  helper = phelper.PObjectHelper(config)
  try :
    oTransaction = params.uipTransaction.GetRecord(0)

    request = {}

    request['ReferenceNo'] = oTransaction.ReferenceNo
    request['Description'] = oTransaction.Description
    request['ActualDate'] = oTransaction.ActualDate
    request['Amount'] = oTransaction.TotalAmount
    request['Inputer'] = oTransaction.Inputer
    #request['BatchId'] = oTransaction.GetFieldByName('LBatch.BatchId')
    request['TransactionNo'] = oTransaction.TransactionNo
    request['CashCurrency'] = oTransaction.GetFieldByName('LCurrency.Currency_Code')
    request['PaidTo'] = oTransaction.PaidTo
    #request['PettyCashAccountNo'] = oTransaction.GetFieldByName('LPettyCash.AccountNo')

    oDonor = params.uipDonor.GetRecord(0)
    request['DonorId'] = oDonor.DonorId
    request['DonorNo'] = oDonor.DonorNo
    request['DonorName'] = oDonor.DonorName
    request['DonorType'] = oDonor.DonorType
    request['MarketerId'] = oDonor.GetFieldByName('LMarketer.MarketerId')
    
    # Cek Marketer
    oMarketer = helper.GetObject('Marketer',request['MarketerId'])
    if oMarketer.isnull :
      raise '','Data Marketer tidak ditemukan / tidak valid / tidak terdaftar sebagai marketer'
    
    request['Rate'] = oTransaction.Rate
    request['BankAccountNo'] = oTransaction.GetFieldByName('LBank.AccountNo')
    request['AssetCode'] = oTransaction.GetFieldByName('LAsset.Account_Code')
    request['AssetName'] = oTransaction.GetFieldByName('LAsset.Account_Name')
    request['AssetCurrency'] = oTransaction.GetFieldByName('LValuta.Currency_Code')
    request['BranchCode'] = config.SecurityContext.GetUserInfo()[4]

    request['SponsorId'] = oTransaction.GetFieldByName('LSponsor.SponsorId')
    request['VolunteerId'] = oTransaction.GetFieldByName('LVolunteer.VolunteerId')
    #request['ProductBranchCode'] = oTransaction.GetFieldByName('LProductBranch.Kode_Cabang')
    request['ShowMode'] = oTransaction.ShowMode
    request['PaymentType'] = oTransaction.PaymentType
    
    items = []

    ItemDescList = []
    for i in range(params.uipTransactionItem.RecordCount):
      oItem = params.uipTransactionItem.GetRecord(i)
      item = {}
      item['ProductId'] = oItem.GetFieldByName('LProduct.ProductId')
      item['Amount'] = oItem.Amount
      #item['Valuta'] = oItem.GetFieldByName('LCurrency.Currency_Code')
      #item['Rate']   = oItem.Rate
      #item['Ekuivalen'] = oItem.Ekuivalen
      item['Description'] = oItem.Description
      item['FundEntity'] = oItem.FundEntity
      item['PercentageOfAmil'] = oItem.PercentageOfAmil
      item['AccountNo'] = oItem.AccountNo
      
      items.append(item)
      ItemDescList.append(oItem.Description)
    #-- for

    request['Items']= items

    if request['Description'] == '' :
      request['Description'] = ','.join(ItemDescList)[:100]
      oTransaction.Description = request['Description']
      
    sRequest = simplejson.dumps(request)
    oService = helper.LoadScript('Transaction.Collection')

    if oTransaction.ShowMode == 1 :
      response = oService.CollectionNew(config, sRequest,params)
    else :
      response = oService.CollectionUpdate(config, sRequest,params)

    response = simplejson.loads(response)
    TransactionNo = response[u'TransactionNo']

    filename = response[u'FileKwitansi'] # oTran.GetKwitansi()
    sw = returns.AddStreamWrapper()
    sw.Name = 'Kwitansi'
    sw.LoadFromFile(filename)
    #sw.MIMEType = config.AppObject.GetMIMETypeFromExtension(filename)
    sw.MIMEType = 'application/msword'

    StreamName = sw.Name

    IsErr = response[u'Status']
    ErrMessage = response[u'ErrMessage']
    
  except :
    IsErr = 1
    ErrMessage = str(sys.exc_info()[1])

  returns.CreateValues(
      ['IsErr', IsErr],
      ['ErrMessage', ErrMessage],
      ['StreamName',StreamName],
      ['TransactionId',TransactionId],
      ['NewTransactionNo',NewTransactionNo],
      ['TransactionNo',TransactionNo],
  )
