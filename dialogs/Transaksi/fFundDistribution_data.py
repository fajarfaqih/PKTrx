import com.ihsan.foundation.pobjecthelper as phelper
import sys
import simplejson


def FormSetDataEx(uideflist, params) :
  config = uideflist.config
  helper = phelper.PObjectHelper(uideflist.config)

  aUserInfo = config.SecurityContext.GetUserInfo()
  aBranchCode = str(aUserInfo[4])
  aBranchName = str(aUserInfo[5])
  aGroupBranchCode = str(aUserInfo[3])

  if params.GetDatasetByName('trparam') != None :
    oForm = helper.CreateObject('FormTransaksi')
    oForm.SetDataEx(uideflist,params)
    
    uipTran = uideflist.uipTransaction.Dataset.GetRecord(0)
    oTran = helper.GetObjectByNames('Transaction',{'TransactionNo' : uipTran.TransactionNo})
    uipTran.SetFieldByName('LVolunteer.VolunteerId',oTran.VolunteerId)
    uipTran.GroupBranchCode = aGroupBranchCode
    
    return

  Now = config.Now()
  rec = uideflist.uipTransaction.Dataset.AddRecord()
  rec.Inputer = str(config.SecurityContext.UserId)
  rec.ReceivedFrom = rec.Inputer
  rec.BranchCode = str(config.SecurityContext.GetUserInfo()[4])
  rec.TransactionDate = int(Now)
  rec.FloatTransactionDate = int(Now)
  rec.ActualDate = rec.TransactionDate
  rec.Rate = 1.0
  rec.TotalAmount = 0.0
  rec.CashType = 'C'
  rec.GroupBranchCode = aGroupBranchCode

  # Set Transaction Number
  rec.TransactionNo = '<AUTOGENERATED>' #GenerateTransactionNumber(config,helper)


  aUserInfo = config.SecurityContext.GetUserInfo()
  aBranchCode = str(aUserInfo[4])
  aBranchName = str(aUserInfo[5])
  #rec.SetFieldByName('LProductBranch.Kode_Cabang', aBranchCode)
  #rec.SetFieldByName('LProductBranch.Nama_Cabang', aBranchName)

  rec.SetFieldByName('LCurrency.Currency_Code', '000')
  rec.SetFieldByName('LCurrency.Full_Name', 'Indonesia Rupiah')
  rec.SetFieldByName('LCurrency.Kurs_Tengah_BI', 1.0)
  
  rec.SetFieldByName('LValuta.Currency_Code', '000')
  rec.SetFieldByName('LValuta.Full_Name', 'Indonesia Rupiah')
  rec.SetFieldByName('LValuta.Kurs_Tengah_BI', 1.0)
  

def GenerateTransactionNumber(config,helper):
  oService = helper.LoadScript('Transaction.TransactionHelper')
  return oService.GetTransactionNumber(config,'DD001')

def GetCurrencyRate(config, params, returns):
  app = config.AppObject
  param = params.FirstRecord
  res = app.rexecscript('accounting','appinterface/Currency.GetCurrencyInfo',
        app.CreateValues(['kode_valuta',param.CurrencyCode]))


  rec = res.FirstRecord
  if rec.Is_Error : raise '',rec.Err_Message
  returns.CreateValues(
    ['Full_Name',rec.Full_Name],
    ['Kurs_Tengah_BI',rec.Kurs_Tengah_BI],
  )

def SimpanData(config, params, returns):
  IsErr = 0
  ErrMessage = ''
  NewTransactionNo = ''
  TransactionNo = ''
  StreamName = ''
  helper = phelper.PObjectHelper(config)
  try :
    oTransaction = params.uipTransaction.GetRecord(0)
    
    request = {}
    request['ReferenceNo'] = oTransaction.ReferenceNo
    request['Description'] = oTransaction.Description
    request['Amount'] = oTransaction.TotalAmount
    request['Inputer'] = oTransaction.Inputer
    #request['BatchId'] = oTransaction.GetFieldByName('LBatch.BatchId')
    request['TransactionNo'] = oTransaction.TransactionNo
    request['PaidTo'] = oTransaction.PaidTo
    request['CashCurrency'] = oTransaction.GetFieldByName('LCurrency.Currency_Code')
    request['DonorId'] = oTransaction.DonorId
    request['ReceivedFrom'] = oTransaction.ReceivedFrom
    request['ActualDate'] = oTransaction.ActualDate
    
    
    request['Rate'] = oTransaction.Rate
    request['BankAccountNo'] = oTransaction.GetFieldByName('LBank.AccountNo')
    request['AssetCode'] = oTransaction.GetFieldByName('LAsset.Account_Code')
    request['AssetName'] = oTransaction.GetFieldByName('LAsset.Account_Name')
    request['AssetCurrency'] = oTransaction.GetFieldByName('LValuta.Currency_Code')
    request['BranchCode'] = config.SecurityContext.GetUserInfo()[4]

    request['SponsorId'] = oTransaction.GetFieldByName('LSponsor.SponsorId')
    request['VolunteerId'] = oTransaction.GetFieldByName('LVolunteer.VolunteerId')
    #request['ProductBranchCode'] = oTransaction.GetFieldByName('LProductBranch.Kode_Cabang')
    request['PeriodId'] = oTransaction.GetFieldByName('PeriodId')
    request['PaymentType'] = oTransaction.PaymentType

    items = []
    
    for i in range(params.uipTransactionItem.RecordCount):
      oItem = params.uipTransactionItem.GetRecord(i)
      item = {}
      item['ProductId'] = oItem.GetFieldByName('LProduct.ProductId')
      item['Ashnaf'] = oItem.Ashnaf
      item['Amount'] = oItem.Amount
      item['Description'] = oItem.Description
      item['FundEntity'] = oItem.FundEntity
      item['DistItemAccount'] = oItem.DistItemCode
      item['BudgetId'] = oItem.BudgetId or 0
      item['AccountNo'] = oItem.AccountNo or ''
      item['BudgetCode'] = oItem.BudgetCode or ''

      items.append(item)
    #-- for
    
    request['Items']= items
    sRequest = simplejson.dumps(request)
    oService = helper.LoadScript('Transaction.Distribution')
    
    if oTransaction.ShowMode == 1 :
      response = oService.DistributionNew(config, sRequest ,params)
    else :
      response = oService.DistributionUpdate(config, sRequest ,params)

    response = simplejson.loads(response)

    TransactionNo = response[u'TransactionNo']
    filename = response[u'FileKwitansi']
    
    sw = returns.AddStreamWrapper()
    sw.Name = 'Kwitansi'
    sw.LoadFromFile(filename)
    #sw.MIMEType = config.AppObject.GetMIMETypeFromExtension(filename)
    sw.MIMEType = 'application/msword'

    StreamName = sw.Name
    
    #if oTransaction.SaveMode == 1 :
    #  NewTransactionNo = GenerateTransactionNumber(config,helper)
    IsErr = response[u'Status']
    ErrMessage = response[u'ErrMessage']

  except :
    IsErr = 1
    ErrMessage = str(sys.exc_info()[1])

  returns.CreateValues(
     ['IsErr', IsErr],
     ['StreamName',StreamName],
     ['ErrMessage', ErrMessage],
     ['NewTransactionNo',NewTransactionNo],
     ['TransactionNo',TransactionNo],
     )

