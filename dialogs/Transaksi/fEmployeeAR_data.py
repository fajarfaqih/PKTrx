import com.ihsan.foundation.pobjecthelper as phelper
import sys
import simplejson


def FormSetDataEx(uideflist, params) :
  config = uideflist.config
  helper = phelper.PObjectHelper(config)

  if params.GetDatasetByName('trparam') != None :
    oForm = helper.CreateObject('FormTransaksi')
    st =  oForm.SetDataEx(uideflist,params)
    
    rec = uideflist.uipTransaction.Dataset.GetRecord(0)

    # Set DebtorId
    if rec.DebtorType in ['',None]:
      rec.DebtorType = 'E'

    if rec.FundEntity in [0,'',None]:
      rec.FundEntity = 4

    return st

  Now = int(config.Now())
  rec = uideflist.uipTransaction.Dataset.AddRecord()
  rec.Inputer = str(config.SecurityContext.UserId)
  rec.Casher = rec.Inputer
  rec.BranchCode = str(config.SecurityContext.GetUserInfo()[4])
  rec.TransactionDate = Now
  rec.FloatTransactionDate = Now
  rec.ActualDate = Now
  rec.Amount = 0.0
  rec.TransactionType = 'P'
  
  # Set Transaction Number
  oService = helper.LoadScript('Transaction.TransactionHelper')
  rec.TransactionNo = '<AUTOGENERATED>' #oService.GetTransactionNumber(config,'EAR')

def SimpanData(config, params, returns):
  IsErr = 0
  ErrMessage = ''
  TransactionNo = ''
  StreamName = ''

  helper = phelper.PObjectHelper(config)
  try :
    oTransaction = params.uipTransaction.GetRecord(0)

    request = {}
    #request['BatchId'] = oTransaction.GetFieldByName('LBatch.BatchId')
    request['EmployeeId'] = oTransaction.EmployeeId #oTransaction.GetFieldByName('LEmployee.Nomor_Karyawan')
    request['EmployeeName'] = oTransaction.EmployeeName
    request['DebtorType'] = oTransaction.DebtorType or 'E'
    
    transactionType = oTransaction.TransactionType
    request['CashAccountNo'] = oTransaction.GetFieldByName('LCashAccount.AccountNo')
    request['Amount'] = oTransaction.Amount
    request['ReferenceNo'] = oTransaction.ReferenceNo
    request['Description'] = oTransaction.Description
    request['Rate'] = 1.0
    request['Inputer'] = config.SecurityContext.InitUser
    request['BranchCode'] = config.SecurityContext.GetUserInfo()[4]
    request['TransactionNo'] = oTransaction.TransactionNo
    request['Casher'] = oTransaction.Casher
    request['FundEntity'] = oTransaction.FundEntity
    request['ActualDate'] = oTransaction.ActualDate
    
    TransNoPrefix = oTransaction.TransactionNo[:2]
    request['IsChangeTransactionNo'] = (
        (TransNoPrefix == 'KK' and transactionType == 'B') or
        (TransNoPrefix == 'KM' and transactionType == 'P'))

    sRequest = simplejson.dumps(request)

    oService = helper.LoadScript('Transaction.GeneralTransaction')

    if transactionType == 'P' : # Pinjam
      dictTranCode = {
        'E' : 'EAR', # Karyawan
        'X' : 'XAR'  # Ekternal Debitur
        }
    elif transactionType == 'B': # Bayar
      dictTranCode = {
        'E' : 'PEAR', # Karyawan
        'X' : 'PXAR'  # Ekternal Debitur
        }

    TransactionCode = dictTranCode[oTransaction.DebtorType]
    
    if oTransaction.ShowMode == 1:
      response = oService.CreateTransaction(TransactionCode, config, sRequest, params)
    else:
      response = oService.UpdateTransaction(TransactionCode, config, sRequest, params)
      
    response = simplejson.loads(response)
    TransactionNo = response[u'TransactionNo']
    filename = response[u'FileKwitansi']

    sw = returns.AddStreamWrapper()
    sw.Name = 'Kwitansi'
    sw.LoadFromFile(filename)
    #sw.MIMEType = config.AppObject.GetMIMETypeFromExtension(filename)
    sw.MIMEType = 'application/msword'
    
    StreamName = sw.Name

    IsErr = response[u'Status']
    ErrMessage = response[u'ErrMessage']
    
  except :
    IsErr = 1
    ErrMessage = str(sys.exc_info()[1])

  returns.CreateValues(
     ['IsErr', IsErr],
     ['ErrMessage', ErrMessage],
     ['TransactionNo',TransactionNo],
     ['StreamName',StreamName],
     )

